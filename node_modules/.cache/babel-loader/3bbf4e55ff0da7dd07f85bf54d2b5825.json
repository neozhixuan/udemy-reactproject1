{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhixuan\\\\Desktop\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card.js\";\nimport ExpenseItem from \"./ExpenseItem.js\";\nimport ExpensesFilter from \"./ExpensesFilter.js\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filterYear, setFilterYear] = useState(\"2020\");\n\n  const changeFilterYear = filteredYear => {\n    setFilterYear(filteredYear);\n    console.log(filteredYear);\n  }; // expense => : keeps an item if condition is true, else it is not kept.\n  // return (something) below\n\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filterYear;\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filterYear,\n      onChangeFilterYear: changeFilterYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), filteredExpenses.map(expenses => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expenses.title,\n      amount: expenses.amount,\n      date: expenses.date\n    }, expenses.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"6isFWgJBMljtaGD2YFjmwn31loo=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/Zhixuan/Desktop/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","Card","ExpenseItem","ExpensesFilter","Expenses","props","filterYear","setFilterYear","changeFilterYear","filteredYear","console","log","filteredExpenses","items","filter","expense","date","getFullYear","toString","map","expenses","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,MAAD,CAA5C;;AAEA,QAAMQ,gBAAgB,GAAIC,YAAD,IAAkB;AACzCF,IAAAA,aAAa,CAACE,YAAD,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACD,GAHD,CAH0B,CAQ1B;AACA;;;AACA,QAAMG,gBAAgB,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;AACrD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CZ,UAAjD;AACD,GAFwB,CAAzB;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEA,UADZ;AAEE,MAAA,kBAAkB,EAAEE;AAFtB;AAAA;AAAA;AAAA;AAAA,YADF,EAMGI,gBAAgB,CAACO,GAAjB,CAAsBC,QAAD,iBACpB,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,QAAQ,CAACC,KAFlB;AAGE,MAAA,MAAM,EAAED,QAAQ,CAACE,MAHnB;AAIE,MAAA,IAAI,EAAEF,QAAQ,CAACJ;AAJjB,OACOI,QAAQ,CAACG,EADhB;AAAA;AAAA;AAAA;AAAA,YADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA/BD;;GAAMnB,Q;;KAAAA,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card.js\";\r\nimport ExpenseItem from \"./ExpenseItem.js\";\r\nimport ExpensesFilter from \"./ExpensesFilter.js\";\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filterYear, setFilterYear] = useState(\"2020\");\r\n\r\n  const changeFilterYear = (filteredYear) => {\r\n    setFilterYear(filteredYear);\r\n    console.log(filteredYear);\r\n  };\r\n\r\n  // expense => : keeps an item if condition is true, else it is not kept.\r\n  // return (something) below\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filterYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filterYear}\r\n        onChangeFilterYear={changeFilterYear}\r\n      />\r\n\r\n      {filteredExpenses.map((expenses) => (\r\n        <ExpenseItem\r\n          key={expenses.id}\r\n          title={expenses.title}\r\n          amount={expenses.amount}\r\n          date={expenses.date}\r\n        />\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}