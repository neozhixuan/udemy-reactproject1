{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zhixuan\\\\Desktop\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card.js\";\nimport ExpensesFilter from \"./ExpensesFilter.js\";\nimport ExpensesList from \"./ExpensesList.js\";\nimport ExpensesChart from './ExpensesChart.js';\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filterYear, setFilterYear] = useState(\"2020\");\n\n  const changeFilterYear = filteredYear => {\n    setFilterYear(filteredYear);\n    console.log(filteredYear);\n  }; // expense => : keeps an item if condition is true, else it is not kept.\n  // return (something) below\n\n\n  const filteredExpenses = props.item.filter(expense => {\n    return expense.date.getFullYear().toString() === filterYear;\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filterYear,\n      onChangeFilterYear: changeFilterYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n      expense: filteredExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n      item: filteredExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"6isFWgJBMljtaGD2YFjmwn31loo=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/Zhixuan/Desktop/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","Card","ExpensesFilter","ExpensesList","ExpensesChart","Expenses","props","filterYear","setFilterYear","changeFilterYear","filteredYear","console","log","filteredExpenses","item","filter","expense","date","getFullYear","toString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,MAAD,CAA5C;;AAEA,QAAMS,gBAAgB,GAAIC,YAAD,IAAkB;AACzCF,IAAAA,aAAa,CAACE,YAAD,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACD,GAHD,CAH0B,CAQ1B;AACA;;;AACA,QAAMG,gBAAgB,GAAGP,KAAK,CAACQ,IAAN,CAAWC,MAAX,CAAmBC,OAAD,IAAa;AACtD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CZ,UAAjD;AACD,GAFwB,CAAzB;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEA,UADZ;AAEE,MAAA,kBAAkB,EAAEE;AAFtB;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,aAAD;AAAe,MAAA,OAAO,EAAEI;AAAxB;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAzBD;;GAAMR,Q;;KAAAA,Q;AA2BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card.js\";\r\nimport ExpensesFilter from \"./ExpensesFilter.js\";\r\nimport ExpensesList from \"./ExpensesList.js\"\r\nimport ExpensesChart from './ExpensesChart.js'\r\nimport \"./Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filterYear, setFilterYear] = useState(\"2020\");\r\n\r\n  const changeFilterYear = (filteredYear) => {\r\n    setFilterYear(filteredYear);\r\n    console.log(filteredYear);\r\n  };\r\n\r\n  // expense => : keeps an item if condition is true, else it is not kept.\r\n  // return (something) below\r\n  const filteredExpenses = props.item.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filterYear;\r\n  });\r\n\r\n  \r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filterYear}\r\n        onChangeFilterYear={changeFilterYear}\r\n      />\r\n      <ExpensesChart expense={filteredExpenses} />\r\n      <ExpensesList item={filteredExpenses}/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}